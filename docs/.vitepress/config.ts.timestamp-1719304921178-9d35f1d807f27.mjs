// docs/.vitepress/config.ts
import { defineConfig } from "file:///C:/Users/super/Documents/GitHub/lulusfavorites/node_modules/vitepress/dist/node/index.js";
import mathjax3 from "file:///C:/Users/super/Documents/GitHub/lulusfavorites/node_modules/markdown-it-mathjax3/index.js";

// docs/.vitepress/customElements.json
var customElements_default = [
  "mjx-container",
  "mjx-assistive-mml",
  "math",
  "maction",
  "maligngroup",
  "malignmark",
  "menclose",
  "merror",
  "mfenced",
  "mfrac",
  "mi",
  "mlongdiv",
  "mmultiscripts",
  "mn",
  "mo",
  "mover",
  "mpadded",
  "mphantom",
  "mroot",
  "mrow",
  "ms",
  "mscarries",
  "mscarry",
  "mscarries",
  "msgroup",
  "mstack",
  "mlongdiv",
  "msline",
  "mstack",
  "mspace",
  "msqrt",
  "msrow",
  "mstack",
  "mstack",
  "mstyle",
  "msub",
  "msup",
  "msubsup",
  "mtable",
  "mtd",
  "mtext",
  "mtr",
  "munder",
  "munderover",
  "semantics",
  "math",
  "mi",
  "mn",
  "mo",
  "ms",
  "mspace",
  "mtext",
  "menclose",
  "merror",
  "mfenced",
  "mfrac",
  "mpadded",
  "mphantom",
  "mroot",
  "mrow",
  "msqrt",
  "mstyle",
  "mmultiscripts",
  "mover",
  "mprescripts",
  "msub",
  "msubsup",
  "msup",
  "munder",
  "munderover",
  "none",
  "maligngroup",
  "malignmark",
  "mtable",
  "mtd",
  "mtr",
  "mlongdiv",
  "mscarries",
  "mscarry",
  "msgroup",
  "msline",
  "msrow",
  "mstack",
  "maction",
  "semantics",
  "annotation",
  "annotation-xml"
];

// docs/.vitepress/sidebar.json
var sidebar_default = [
  {
    text: "Algorithm",
    collapsed: false,
    items: [
      {
        text: "Edit distance and backtracking path",
        link: "/Favorites/Algorithm/Edit distance and backtracking path.md"
      },
      {
        text: "Water pouring puzzle",
        link: "/Favorites/Algorithm/Water pouring puzzle.md"
      }
    ]
  },
  {
    text: "Dependency Guides",
    collapsed: false,
    items: [
      {
        text: "Conda",
        collapsed: true,
        items: [
          {
            text: "\u5B89\u88C5\u5B8CConda\u540E\u7684\u5FC5\u505A\u4E8B\u9879",
            link: "/Favorites/Dependency Guides/Conda/\u5B89\u88C5\u5B8CConda\u540E\u7684\u5FC5\u505A\u4E8B\u9879.md"
          },
          {
            text: "\u81EA\u52A8\u5316\u9879\u76EE\u73AF\u5883\u914D\u7F6E",
            link: "/Favorites/Dependency Guides/Conda/\u81EA\u52A8\u5316\u9879\u76EE\u73AF\u5883\u914D\u7F6E.md"
          }
        ]
      }
    ]
  },
  {
    text: "Operating System",
    collapsed: false,
    items: [
      {
        text: "Windows Subsystem for Linux",
        collapsed: true,
        items: [
          {
            text: "How do I free up space on WSL",
            link: "/Favorites/Operating System/Windows Subsystem for Linux/How do I free up space on WSL.md"
          },
          {
            text: "WSL and VMware Incompatibility",
            link: "/Favorites/Operating System/Windows Subsystem for Linux/WSL and VMware Incompatibility.md"
          }
        ]
      }
    ]
  },
  {
    text: "Raspberry Pi",
    collapsed: false,
    items: [
      {
        text: "Configuring I2C on the Raspberry Pi",
        link: "/Favorites/Raspberry Pi/Configuring I2C on the Raspberry Pi.md"
      },
      {
        text: "How to Fix No module named RPi Error on Raspberry Pi",
        link: "/Favorites/Raspberry Pi/How to Fix No module named RPi Error on Raspberry Pi.md"
      }
    ]
  },
  {
    text: "Toolbox",
    collapsed: false,
    items: [
      {
        text: "How to Use Git and GitHub",
        link: "/Favorites/Toolbox/How to Use Git and GitHub.md"
      },
      {
        text: "Interview Questions",
        collapsed: true,
        items: [
          {
            text: "Web Frontend",
            collapsed: true,
            items: [
              {
                text: "HTML & CSS",
                link: "/Favorites/Toolbox/Interview Questions/Web Frontend/HTML & CSS.md"
              },
              {
                text: "JavaScript",
                link: "/Favorites/Toolbox/Interview Questions/Web Frontend/JavaScript.md"
              },
              {
                text: "Uniapp",
                link: "/Favorites/Toolbox/Interview Questions/Web Frontend/Uniapp.md"
              },
              {
                text: "Vue",
                link: "/Favorites/Toolbox/Interview Questions/Web Frontend/Vue.md"
              },
              {
                text: "Web APIs",
                link: "/Favorites/Toolbox/Interview Questions/Web Frontend/Web APIs.md"
              }
            ]
          }
        ]
      },
      {
        text: "Interview Questions",
        link: "/Favorites/Toolbox/Interview Questions.md"
      },
      {
        text: "Prompt Palette",
        link: "/Favorites/Toolbox/Prompt Palette.md"
      },
      {
        text: "Tools",
        link: "/Favorites/Toolbox/Tools.md"
      }
    ]
  },
  {
    text: "Web Frontend",
    collapsed: false,
    items: [
      {
        text: "AJAX",
        collapsed: true,
        items: [
          {
            text: "Using AJAX to Interact with {JSON} Placeholder",
            link: "/Favorites/Web Frontend/AJAX/Using AJAX to Interact with {JSON} Placeholder.md"
          }
        ]
      },
      {
        text: "Element Plus",
        collapsed: true,
        items: [
          {
            text: "How to Set the Height of el-menu",
            link: "/Favorites/Web Frontend/Element Plus/How to Set the Height of el-menu.md"
          }
        ]
      },
      {
        text: "Nuxt",
        collapsed: true,
        items: [
          {
            text: "Cannot load Pinia in Nuxt3",
            link: "/Favorites/Web Frontend/Nuxt/Cannot load Pinia in Nuxt3.md"
          },
          {
            text: "How to use jQuery in Nuxt.js",
            link: "/Favorites/Web Frontend/Nuxt/How to use jQuery in Nuxt.js.md"
          },
          {
            text: "vuedraggable custom component setup in Nuxt3",
            link: "/Favorites/Web Frontend/Nuxt/vuedraggable custom component setup in Nuxt3.md"
          }
        ]
      },
      {
        text: "Uniapp",
        collapsed: true,
        items: [
          {
            text: "\u5728Uniapp\u4E2D\u4F7F\u7528ECharts",
            link: "/Favorites/Web Frontend/Uniapp/\u5728Uniapp\u4E2D\u4F7F\u7528ECharts.md"
          }
        ]
      },
      {
        text: "VitePress",
        collapsed: true,
        items: [
          {
            text: "How to use VitePress to show LaTeX",
            link: "/Favorites/Web Frontend/VitePress/How to use VitePress to show LaTeX.md"
          },
          {
            text: "VitePress Sidebar",
            link: "/Favorites/Web Frontend/VitePress/VitePress Sidebar.md"
          }
        ]
      }
    ]
  }
];

// docs/.vitepress/config.ts
var config_default = defineConfig({
  title: "Lulu's Favorites",
  description: `Welcome to "Lulu's Favorites"! Explore the tech wonders from my browser favorites - coding, hardware, and more. Let's embark on this tech journey together!`,
  head: [["link", { rel: "icon", href: "/1F31F.svg" }]],
  themeConfig: {
    // https://vitepress.dev/reference/default-theme-config
    // logo: '/1F31F.svg',
    nav: [
      { text: "Home", link: "/" },
      { text: "Favorites", link: "/welcome" }
    ],
    search: {
      provider: "local"
    },
    sidebar: sidebar_default,
    socialLinks: [
      { icon: "github", link: "https://github.com/lulu0119" },
      { icon: "twitter", link: "https://twitter.com/lulu_8964" }
    ],
    footer: {
      message: `Content on "Lulu's Favorites" is under CC BY-NC-SA 4.0.`,
      copyright: "\xA9 2023-present Lulu All Rights Reserved."
    },
    editLink: {
      pattern: "https://github.com/lulu0119/lulusfavorites/tree/master/docs/:path",
      text: "Edit this page on GitHub"
    }
  },
  lastUpdated: true,
  markdown: {
    config: (md) => {
      md.use(mathjax3);
    }
  },
  vue: {
    template: {
      compilerOptions: {
        isCustomElement: (tag) => customElements_default.includes(tag)
      }
    }
  }
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
